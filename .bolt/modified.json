[["/home/project/index.html","<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"/actionrouter.png\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ActionRouter - Create and Share Roadmaps</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <script type=\"module\" src=\"/src/main.ts\"></script>\n  </body>\n</html>"],["/home/project/src/App.svelte","<script lang=\"ts\">\n  import { Router, Route, Link, navigate } from \"svelte-routing\";\n  import Home from \"./routes/Home.svelte\";\n  import CreateAction from \"./routes/CreateAction.svelte\";\n  import ViewAction from \"./routes/ViewAction.svelte\";\n  import MyActions from \"./routes/MyActions.svelte\";\n  import Icon from '@iconify/svelte';\n  import { initClerk, clerk } from './lib/clerk';\n  import { onMount } from 'svelte';\n  import UserSettings from \"./components/UserSettings.svelte\";\n  import { createOrUpdateUser, getUser } from './lib/supabase';\n\n  export let url = \"\";\n\n  let user = null;\n  let clerkError = false;\n  let showSettings = false;\n  let isDarkMode = false;\n\n  onMount(async () => {\n    const initializedClerk = await initClerk();\n    if (initializedClerk) {\n      initializedClerk.addListener(async (state) => {\n        if (state.user) {\n          console.log({state})\n          const supabaseUser = await getUser(state.user.id);\n          if (supabaseUser) {\n            user = { ...state.user, name: supabaseUser.name };\n          } else {\n            user = state.user;\n            await createOrUpdateUser(user.id, user.firstName || 'Anonymous');\n          }\n          console.log({user})\n        } else {\n          user = null;\n        }\n      });\n    } else {\n      clerkError = true;\n    }\n\n    // Check for user's theme preference\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      isDarkMode = true;\n      document.documentElement.classList.add('dark');\n    }\n  });\n\n  function signIn() {\n    console.log({at: \"signin\", clerk})\n    if (clerk) clerk.openSignIn();\n  }\n\n  function signOut() {\n    if (clerk) clerk.signOut();\n  }\n\n  function toggleSettings() {\n    showSettings = !showSettings;\n  }\n\n  function toggleTheme() {\n    isDarkMode = !isDarkMode;\n    document.documentElement.classList.toggle('dark');\n  }\n\n  function handleCreateAction() {\n    if (!user) {\n      alert(\"Please sign in to create an action.\");\n      signIn();\n      return;\n    }\n    navigate(\"/create\");\n  }\n</script>\n\n<Router {url}>\n  <div class=\"min-h-screen bg-gradient-to-br from-blue-100 to-purple-100 dark:from-gray-800 dark:to-gray-900 transition-colors duration-300\">\n    <nav class=\"bg-white bg-opacity-20 dark:bg-gray-800 dark:bg-opacity-20 backdrop-filter backdrop-blur-lg shadow-lg mb-8\">\n      <div class=\"container mx-auto px-4 py-4 flex justify-between items-center\">\n        <Link to=\"/\" class=\"flex items-center\">\n          <img src=\"/actionrouter.png\" alt=\"ActionRouter Logo\" class=\"h-8 w-8 mr-2\" />\n          <span class=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">ActionRouter</span>\n        </Link>\n        <div class=\"flex items-center space-x-4\">\n          <button on:click={handleCreateAction} class=\"btn\">\n            <Icon icon=\"ph:plus\" class=\"inline-block mr-1\" />\n            Create Action\n          </button>\n          {#if user}\n            <Link to=\"/my-actions\" class=\"btn\">\n              <Icon icon=\"ph:list-bullets\" class=\"inline-block mr-1\" />\n              My Actions\n            </Link>\n          {/if}\n          {#if clerkError}\n            <span class=\"text-red-500\">Authentication unavailable</span>\n          {:else if user}\n            <button on:click={toggleSettings} class=\"btn\" title=\"Settings\">\n              <Icon icon=\"ph:gear\" class=\"inline-block\" />\n            </button>\n            <button on:click={signOut} class=\"btn bg-red-500 hover:bg-red-600 text-white\" title=\"Sign Out\">\n              <Icon icon=\"ph:sign-out\" class=\"inline-block\" />\n            </button>\n          {:else}\n            <button on:click={signIn} class=\"btn bg-green-500 hover:bg-green-600 text-white\">\n              <Icon icon=\"ph:sign-in\" class=\"inline-block mr-1\" />\n              Sign In\n            </button>\n          {/if}\n          <button on:click={toggleTheme} class=\"btn\" title=\"Toggle Theme\">\n            <Icon icon={isDarkMode ? \"ph:sun\" : \"ph:moon\"} class=\"inline-block\" />\n          </button>\n        </div>\n      </div>\n    </nav>\n\n    <main class=\"container mx-auto px-4\">\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/create\" component={CreateAction} />\n      <Route path=\"/action/:id\" component={ViewAction} />\n      <Route path=\"/my-actions\" component={MyActions} />\n      <Route path=\"/edit/:id\" component={CreateAction} />\n    </main>\n\n    {#if showSettings}\n      <UserSettings on:close={toggleSettings} {user} />\n    {/if}\n  </div>\n</Router>\n\n<style>\n  :global(body) {\n    @apply transition-colors duration-300;\n  }\n\n  :global(.btn) {\n    @apply px-4 py-2 rounded-md transition-all duration-200 ease-in-out text-gray-800 dark:text-gray-200;\n    background: rgba(255, 255, 255, 0.2);\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    box-shadow: 0 4px 16px 0 rgba(31, 38, 135, 0.27);\n  }\n\n  :global(.btn:hover) {\n    background: rgba(255, 255, 255, 0.3);\n  }\n\n  :global(.card) {\n    @apply bg-white bg-opacity-20 dark:bg-gray-800 dark:bg-opacity-20 backdrop-filter backdrop-blur-lg rounded-lg border border-white border-opacity-20 dark:border-gray-700 shadow-lg transition-colors duration-300;\n  }\n\n  :global(.input) {\n    @apply w-full px-3 py-2 rounded-md bg-white bg-opacity-20 dark:bg-gray-800 dark:bg-opacity-20 backdrop-filter backdrop-blur-lg border border-white border-opacity-20 dark:border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-300;\n  }\n</style>"]]